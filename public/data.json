[
  {
    "title": "Star Read Astro博客主题",
    "description": "Star Read是一个出色、简洁且精致的Astro博客主题，提供多种安装方式，项目结构清晰，具备现代UI、搜索支持、响应式设计、主题切换等功能，还提供搜索、主题定制和评论系统的详细配置。",
    "cover": "https://t.alcy.cc/pc",
    "categories": [
      "主题说明"
    ],
    "tags": [
      "vue",
      "javascript"
    ],
    "date": "2025-10-20T00:00:00.000Z",
    "content": "<div align=\"center\">\n  <img src=\"https://origin.picgo.net/2025/09/20/starread9dd6dc8d9d8dc4eb.png\" alt=\"starread\" border=\"0\">\n   🏴󠁧󠁢󠁥󠁮󠁧󠁿 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/README.md\">English Document</a> | \n  🇨🇳 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMECN.md\">中文文档</a> | \n  🇯🇵 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEJA.md\">日本語ドキュメント</a> | \n  🇰🇷 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEKO.md\">한국어 문서</a> | \n  🇷🇺 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMERU.md\">Русская документация</a>\n</div>\n\n>既有星光般的璀璨，又不失简洁和高端感的Astro主题\n\n## 📦 安装\n\n### 方法一：通过CLI工具初始化\n\n| 包管理器       | 建议命令                                  |\n|----------------|-------------------------------------------|\n| pnpm / pnpx    | `pnpm dlx astro-theme-starread init` 或 `pnpx astro-theme-starread init` |\n| npm (npx)      | `npx astro-theme-starread init`           |\n| Yarn           | `yarn dlx astro-theme-starread init`（需 Yarn v2+） |\n\n>[!note]\n>我们提供了`create`命令，方便用户在指定文件夹创建主题\n\n1. 创建项目： 根据您使用的包管理器，选择以下命令之一：\n\n```bash\n# 使用 pnpm\npnpm create astro-theme-starread my-blog\n\n# 使用 npm\nnpx create-astro-theme-starread my-blog\n\n# 使用 yarn\nyarn create astro-theme-starread my-blog\n\n# 使用 cnpm\ncnpm init astro-theme-starread my-blog\n```\n\n2. 进入项目目录：\n\n```bash\ncd my-blog\n```\n\n3. 安装依赖：\n\n```bash\npnpm install\n```\n\n4. 启动开发服务器：\n\n```bash\npnpm dev\n```\n\n### 方法二：使用`astro`模版安装\n\n>[!warning]\n>该方式需访问Github仓库，确保网络畅通。\n\n| 包管理器       | 命令                                        |\n|----------------|---------------------------------------------|\n| pnpm           | `pnpm create astro@latest --template passwordgloo/astro-theme-starread` |\n| npm            | `npm create astro@latest -- --template passwordgloo/astro-theme-starread` |\n| yarn           | `yarn create astro --template passwordgloo/astro-theme-starread` |\n\n### 方法三：源码安装\n\n>[!warning]\n>该方式需访问Github仓库，确保网络畅通。\n\n\n```bash\ngit clone https://github.com/passwordgloo/astro-theme-starread\ncd astro-theme-starread\npnpm install\n```\n\n>[!note]\n>安装完成后，运行开发服务器：\n```bash\npnpm dev\n```\n\n## 📂 项目结构\n\n```text\n/\n├── src/\n│   ├── components/     # 组件文件\n│   ├── content/        # 内容配置\n│   ├── layouts/        # 布局模板\n│   ├── pages/          # 页面路由\n│   └── styles/         # 样式文件\n├── public/             # 静态资源\n└── dist/               # 构建输出\n```\n\n## 🚀 特性\n\n- 🎨 现代化UI设计\n- 🔍 支持本地搜索（Pagefind）和Algolia搜索\n- 📱 响应式设计\n- 🌙 深色/浅色主题切换\n- 🏷️ 标签和分类支持\n- 📊 文章统计和作者信息展示\n\n## 🔍 搜索\n\n### 本地搜索\n\n默认使用本地搜索，首次使用请运行`pnpm local` 建立本地索引\n\n### Algolia搜索\n\n>[!important]\n>生产环境中建议使用环境变量方式配置，避免敏感信息暴露在代码中。\n\n1. 编辑`starread.config.ts` 选择Algolia搜索\n```ts\nexport const themeConfig: starreadthemeconfig = {\n  search: {\n    // 搜索服务提供商: 'local', 'algolia'\n      provider: 'algolia',\n    }\n}\n```\n\n2. 根目录创建并编辑 `.env`文件\n\n>[!note]\n>Algolia搜索需要您的Algolia应用ID、搜索密钥、索引名称和管理员API密钥。\n\n>[!tip]\n>如果您没有Algolia账号，需要先注册并创建一个应用。\n\n```txt\nPUBLIC_ALGOLIA_APP_ID=您的Algolia应用ID\nPUBLIC_ALGOLIA_SEARCH_KEY=您的Algolia搜索密钥\nPUBLIC_ALGOLIA_INDEX_NAME=您的索引名称\nALGOLIA_WRITE_API_KEY=您的写入API密钥（用于索引上传）\n```\n\n3. 推送索引到Algolia\n\n运行`pnpm algolia` 推送本地索引到Algolia\n\n## ⚙️ 自定义配置\n\n您可以通过修改根目录下的 `starread.config.ts` 文件来自定义主题配置，包括网站标题、导航菜单、作者信息、侧边栏组件显示等。\n\n示例配置项：\n```typescript\n// 修改网站标题\nsite: {\n  title: '我的博客',\n  // ...其他配置\n}\n\n// 自定义导航菜单\nnav: [\n  { name: '首页', href: '/' },\n  { name: '关于', href: '/about' },\n  // ...其他菜单项\n]\n```\n## 🔧 Twikoo 评论\n\n>[!tip]\n>如需启用twikoo，请修改`src/compponents/Comment.astros`中的第13行`envId`为您的[twikoo环境地址](https://twikoo.js.org/backend.html)。\n\n```js\n<script>\n  document.addEventListener('DOMContentLoaded', function() {\n    if (window.twikoo) {\n      window.twikoo.init({\n        envId: 'https://example.com',// 你的环境地址\n        el: '#tcomment',\n        path: window.location.pathname\n      });\n    } else {\n      console.error('Twikoo 加载失败，请检查 twikoo本地位置或者CDN地址');\n    }\n  });\n</script>\n```\n\n## 🧞 命令\n\n| 命令                     | 描述                                           |\n| :----------------------- | :--------------------------------------------- |\n| `pnpm install`           | 安装依赖                                       |\n| `pnpm dev`               | 启动本地开发服务器 `localhost:4321`            |\n| `pnpm preview`           | 本地预览构建结果                               |\n| `pnpm local`             | 运行自动索引脚本并构建生产站点                 |\n| `pnpm algolia`           | 推送数据到Algolia搜索                          |\n| `pnpm changelog`         | 生成更新日志                                   |\n| `pnpm release`           | 版本管理（更新版本号、生成提交等）             |",
    "slug": "articles/cn",
    "url": "/articles/8f487f/",
    "permalink": "/articles/8f487f/",
    "collection": "articles"
  },
  {
    "title": "Star Read Astro Blog Theme",
    "description": "Star Read is a brilliant, clean, and sophisticated Astro blog theme. It offers multiple installation methods, has a well structured project layout, and comes with features like modern UI, search support, responsive design, theme toggling, and more. It also provides detailed configurations for search, theme customization, and comment systems.",
    "cover": "https://picsum.photos/800/400?random=1",
    "categories": [
      "主题说明"
    ],
    "tags": [],
    "date": "2025-10-20T00:00:00.000Z",
    "content": "<div align=\"center\">\n  <img src=\"https://origin.picgo.net/2025/09/20/starread9dd6dc8d9d8dc4eb.png\" alt=\"starread\" border=\"0\">\n   🏴󠁧󠁢󠁥󠁮󠁧󠁿 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/README.md\">English Document</a> | \n  🇨🇳 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMECN.md\">中文文档</a> | \n  🇯🇵 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEJA.md\">日本語ドキュメント</a> | \n  🇰🇷 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEKO.md\">한국어 문서</a> | \n  🇷🇺 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMERU.md\">Русская документация</a>\n</div>\n\n\n# Star Read - Astro Blog Theme\n\n>A brilliant yet clean and sophisticated Astro theme with star-like quality\n\n## 📦 Installation\n\n### Method 1: Initialize via CLI Tool\n\n| Package Manager | Recommended Command                          |\n|----------------|-------------------------------------------|\n| pnpm / pnpx    | `pnpm dlx astro-theme-starread init` or `pnpx astro-theme-starread init` |\n| npm (npx)      | `npx astro-theme-starread init`           |\n| Yarn           | `yarn dlx astro-theme-starread init` (Requires Yarn v2+) |\n\n>[!note]\n>We provide a `create` command to facilitate creating a theme in a specified folder\n\n1. Create Project: Depending on your package manager, choose one of the following commands:\n\n```bash\n# Using pnpm\npnpm create astro-theme-starread my-blog\n\n# Using npm\nnpx create-astro-theme-starread my-blog\n\n# Using yarn\nyarn create astro-theme-starread my-blog\n\n# Using cnpm\ncnpm init astro-theme-starread my-blog\n```\n\n2. Enter Project Directory:\n\n```bash\ncd my-blog\n```\n\n3. Install Dependencies:\n\n```bash\npnpm install\n```\n\n4. Start Development Server:\n\n```bash\npnpm dev\n```\n\n### Method 2: Install using `astro` template\n\n>[!warning]\n>This method requires accessing the GitHub repository, ensure network connectivity.\n\n| Package Manager | Command                                        |\n|----------------|---------------------------------------------|\n| pnpm           | `pnpm create astro@latest --template passwordgloo/astro-theme-starread` |\n| npm            | `npm create astro@latest -- --template passwordgloo/astro-theme-starread` |\n| yarn           | `yarn create astro --template passwordgloo/astro-theme-starread` |\n\n### Method 3: Install from Source\n\n>[!warning]\n>This method requires accessing the GitHub repository, ensure network connectivity.\n\n\n```bash\ngit clone https://github.com/passwordgloo/astro-theme-starread\ncd astro-theme-starread\npnpm install\n```\n\n>[!note]\n>After installation, run the development server:\n```bash\npnpm dev\n```\n\n## 📂 Project Structure\n\n```text\n/\n├── src/\n│   ├── components/     # Component files\n│   ├── content/        # Content configuration\n│   ├── layouts/        # Layout templates\n│   ├── pages/          # Page routes\n│   └── styles/         # Style files\n├── public/             # Static assets\n└── dist/               # Build output\n```\n\n## 🚀 Features\n\n- 🎨 Modern UI Design\n- 🔍 Support for Local Search (Pagefind) and Algolia Search\n- 📱 Responsive Design\n- 🌙 Dark/Light Theme Toggle\n- 🏷️ Tag and Category Support\n- 📊 Article Statistics and Author Information Display\n\n## 🔍 Search\n\n### Local Search\n\nLocal search is used by default. For first-time use, run `pnpm local` to build local index\n\n### Algolia Search\n\n>[!important]\n>It is recommended to use environment variables for configuration in production to avoid exposing sensitive information in code.\n\n1. Edit `starread.config.ts` to select Algolia search\n```ts\nexport const themeConfig: starreadthemeconfig = {\n  search: {\n    // Search provider: 'local', 'algolia'\n      provider: 'algolia',\n    }\n}\n```\n\n2. Create and edit `.env` file in root directory\n\n>[!note]\n>Algolia search requires your Algolia Application ID, Search Key, Index Name, and Admin API Key.\n\n>[!tip]\n>If you don't have an Algolia account, you need to register and create an application first.\n\n```txt\nPUBLIC_ALGOLIA_APP_ID=Your Algolia Application ID\nPUBLIC_ALGOLIA_SEARCH_KEY=Your Algolia Search Key\nPUBLIC_ALGOLIA_INDEX_NAME=Your Index Name\nALGOLIA_WRITE_API_KEY=Your Write API Key (for index upload)\n```\n\n3. Push Index to Algolia\n\nRun `pnpm algolia` to push local index to Algolia\n\n## ⚙️ Custom Configuration\n\nYou can customize theme configuration by modifying the `starread.config.ts` file in the root directory, including website title, navigation menu, author information, sidebar component display, etc.\n\nExample configuration items:\n```typescript\n// Modify website title\nsite: {\n  title: 'My Blog',\n  // ...other configurations\n}\n\n// Custom navigation menu\nnav: [\n  { name: 'Home', href: '/' },\n  { name: 'About', href: '/about' },\n  // ...other menu items\n]\n```\n\n## 🔧 Twikoo Comment Configuration\n\nTo enable Twikoo comment system, please modify the `envId` value on line 13 of `src/components/Comment.astro` file to your [Twikoo environment address](https://twikoo.js.org/backend.html).\n\n```js\n<script>\n  document.addEventListener('DOMContentLoaded', function() {\n    if (window.twikoo) {\n      window.twikoo.init({\n        envId: 'https://example.com',// Your environment address\n        el: '#tcomment',\n        path: window.location.pathname\n      });\n    } else {\n      console.error('Twikoo failed to load, please check the local Twikoo location or CDN address');\n    }\n  });\n</script>\n```\n\n\n## 🧞 Commands\n\n| Command                 | Description                                       |\n| :----------------------- | :--------------------------------------------- |\n| `pnpm install`           | Install dependencies                           |\n| `pnpm dev`               | Start local development server `localhost:4321` |\n| `pnpm preview`           | Preview build results locally                   |\n| `pnpm local`             | Run automatic indexing script and build production site |\n| `pnpm algolia`           | Push data to Algolia search                      |\n| `pnpm changelog`         | Generate changelog                              |\n| `pnpm release`           | Version management (update version number, generate commits, etc.) |",
    "slug": "articles/en",
    "url": "/articles/dc7c5f/",
    "permalink": "/articles/dc7c5f/",
    "collection": "articles"
  },
  {
    "title": "GFM语法",
    "description": "这是一篇示例文章，展示了如何使用frontmatter配置文章属性。",
    "cover": "https://www.dmoe.cc/random.php",
    "categories": [
      "帮助"
    ],
    "tags": [],
    "date": "2025-10-01T00:00:00.000Z",
    "content": "## 列表\n\n### 任务列表\n\n- [x] 支持 task list\n- [ ] 还没完成\n\n### 有序列表\n\n- 有序列表项 1\n- 有序列表项 2\n- 有序列表项 3\n\n### 无序列表\n\n- 无序列表项 1\n- 无序列表项 2\n- 无序列表项 3\n\n\n\n## 表格\n\n| 字段 | 值 |\n| --- | --- |\n| 版本 | Tailwind v4 |\n| 插件 | @tailwindcss/typography |\n\n## 删除线\n\n~~被删除的文本~~\n\n## 脚注\n\n这里有脚注[^1]。\n\n## GFM风格引用块\n\n>[!note]\n> 📒 这是一个注意事项\n\n>[!warning]\n> ⚠️ 这是一个警告事项\n\n>[!caution]\n> 🙅 这是一个危险事项\n\n>[!tip]\n> 🔔 这是一个提示事项\n\n>[!important]\n> ‼️ 这是一个重要事项\n\n\n## 代码\n\n```js\nconsole.log(' fenced code 支持高亮按你的主题来 ');\n```",
    "slug": "articles/gfm",
    "url": "/articles/f9bfd7/",
    "permalink": "/articles/f9bfd7/",
    "collection": "articles"
  },
  {
    "title": "Star Read Astroブログテーマ",
    "description": "Star Read Astroブログテーマは、Astroを使用して作成されたブログテーマであり、インストール方法やプロジェクト構造、検索機能、カスタム設定、コメントシステムなどの使い方が説明されています。",
    "cover": "https://t.alcy.cc/ysz",
    "categories": [
      "主题说明"
    ],
    "tags": [],
    "date": "2024-05-20T00:00:00.000Z",
    "content": "<div align=\"center\">\n  <img src=\"https://origin.picgo.net/2025/09/20/starread9dd6dc8d9d8dc4eb.png\" alt=\"starread\" border=\"0\">\n   🏴󠁧󠁢󠁥󠁮󠁧󠁿 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/README.md\">English Document</a> | \n  🇨🇳 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMECN.md\">中文文档</a> | \n  🇯🇵 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEJA.md\">日本語ドキュメント</a> | \n  🇰🇷 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEKO.md\">한국어 문서</a> | \n  🇷🇺 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMERU.md\">Русская документация</a>\n</div>\n# Star Read - Astroブログテーマ\n\n>星のように輝き、简洁かつ高級感のあるAstroテーマです\n\n## 📦 インストール\n\n### 方法1：CLIツールを介して初期化\n\n| パッケージマネージャー | 推奨コマンド                                  |\n|----------------|-------------------------------------------|\n| pnpm / pnpx    | `pnpm dlx astro-theme-starread init` または `pnpx astro-theme-starread init` |\n| npm (npx)      | `npx astro-theme-starread init`           |\n| Yarn           | `yarn dlx astro-theme-starread init`（Yarn v2+ が必要） |\n\n>[!note]\n>`create`コマンドを提供しており、ユーザーが指定したフォルダにテーマを作成することができます\n\n1. プロジェクトの作成： 使用しているパッケージマネージャーに応じて、以下のコマンドのいずれかを選択してください：\n\n```bash\n# pnpmを使用\npnpm create astro-theme-starread my-blog\n\n# npmを使用\nnpx create-astro-theme-starread my-blog\n\n# yarnを使用\nyarn create astro-theme-starread my-blog\n\n# cnpmを使用\ncnpm init astro-theme-starread my-blog\n```\n\n2. プロジェクトディレクトリに入る：\n\n```bash\ncd my-blog\n```\n\n3. 依存関係をインストール：\n\n```bash\npnpm install\n```\n\n4. 開発サーバーを起動：\n\n```bash\npnpm dev\n```\n\n### 方法2：`astro`テンプレートを使用してインストール\n\n>[!warning]\n>この方法ではGithubリポジトリへのアクセスが必要です。ネットワーク接続が正常であることを確認してください。\n\n| パッケージマネージャー | コマンド                                        |\n|----------------|---------------------------------------------|\n| pnpm           | `pnpm create astro@latest --template passwordgloo/astro-theme-starread` |\n| npm            | `npm create astro@latest -- --template passwordgloo/astro-theme-starread` |\n| yarn           | `yarn create astro --template passwordgloo/astro-theme-starread` |\n\n### 方法3：ソースコードからインストール\n\n>[!warning]\n>该方式需访问Github仓库，确保网络畅通。\n\n\n```bash\ngit clone https://github.com/passwordgloo/astro-theme-starread\ncd astro-theme-starread\npnpm install\n```\n\n>[!note]\n>インストールが完了したら、開発サーバーを実行します：\n```bash\npnpm dev\n```\n\n## 📂 プロジェクト構造\n\n```text\n/\n├── src/\n│   ├── components/     # コンポーネントファイル\n│   ├── content/        # コンテンツ設定\n│   ├── layouts/        # レイアウトテンプレート\n│   ├── pages/          # ページルート\n│   └── styles/         # スタイルファイル\n├── public/             # 静的資産\n└── dist/               # ビルド出力\n```\n\n## 🚀 特徴\n\n- 🎨 現代的なUIデザイン\n- 🔍 ローカル検索（Pagefind）とAlgolia検索をサポート\n- 📱 レスポンシブデザイン\n- 🌙 ダーク/ライトテーマ切り替え\n- 🏷️ タグとカテゴリーのサポート\n- 📊 記事統計と作者情報の表示\n\n## 🔍 検索\n\n### ローカル検索\n\nデフォルトではローカル検索が使用されます。初回使用時は`pnpm local`を実行してローカルインデックスを作成してください\n\n### Algolia検索\n\n>[!important]\n>本番環境では、コードに機密情報が公開されないように、環境変数による設定を推奨します。\n\n1. `starread.config.ts`を編集してAlgolia検索を選択します\n```ts\nexport const themeConfig: starreadthemeconfig = {\n  search: {\n    // 検索サービスプロバイダー: 'local', 'algolia'\n      provider: 'algolia',\n    }\n}\n```\n\n2. ルートディレクトリに`.env`ファイルを作成して編集します\n\n>[!note]\n>Algolia検索には、AlgoliaアプリケーションID、検索キー、インデックス名、および管理者APIキーが必要です。\n\n>[!tip]\n>Algoliaアカウントをお持ちでない場合は、先に登録してアプリケーションを作成する必要があります。\n\n```txt\nPUBLIC_ALGOLIA_APP_ID=あなたのAlgoliaアプリケーションID\nPUBLIC_ALGOLIA_SEARCH_KEY=あなたのAlgolia検索キー\nPUBLIC_ALGOLIA_INDEX_NAME=あなたのインデックス名\nALGOLIA_WRITE_API_KEY=あなたの書き込みAPIキー（インデックスアップロード用）\n```\n\n3. インデックスをAlgoliaにプッシュします\n\n`pnpm algolia`を実行してローカルインデックスをAlgoliaにプッシュします\n\n## ⚙️ カスタム設定\n\nルートディレクトリの`starread.config.ts`ファイルを編集することで、ウェブサイトのタイトル、ナビゲーションメニュー、作者情報、サイドバーコンポーネントの表示など、テーマ設定をカスタマイズできます。\n\n設定例：\n```typescript\n// ウェブサイトのタイトルを変更\nsite: {\n  title: '私のブログ',\n  // ...その他の設定\n}\n\n// ナビゲーションメニューをカスタマイズ\nnav: [\n  { name: '首页', href: '/' },\n  { name: '关于', href: '/about' },\n  // ...その他のメニュー項目\n]\n```\n\n## 🔧 Twikooコメント設定\n\nTwikooコメントシステムを有効にするには、`src/components/Comment.astro`ファイルの13行目の`envId`の値をあなたの[Twikoo環境アドレス](https://twikoo.js.org/backend.html)に変更してください。\n\n```js\n<script>\n  document.addEventListener('DOMContentLoaded', function() {\n    if (window.twikoo) {\n      window.twikoo.init({\n        envId: 'https://example.com',// あなたの環境アドレス\n        el: '#tcomment',\n        path: window.location.pathname\n      });\n    } else {\n      console.error('Twikooのロードに失敗しました。Twikooのローカル位置またはCDNアドレスを確認してください');\n    }\n  });\n</script>\n```\n\n## 🧞 コマンド\n\n| コマンド                 | 説明                                           |\n| :----------------------- | :--------------------------------------------- |\n| `pnpm install`           | 依存関係をインストール                           |\n| `pnpm dev`               | ローカル開発サーバー `localhost:4321` を起動する |\n| `pnpm preview`           | ローカルでビルド結果をプレビューする               |\n| `pnpm local`             | 自動インデックススクリプトを実行して本番サイトを構築する |\n| `pnpm algolia`           | データをAlgolia検索にプッシュする                  |\n| `pnpm changelog`         | 変更ログを生成する                              |\n| `pnpm release`           | バージョン管理（バージョン番号の更新、コミットの生成など） |",
    "slug": "articles/ja",
    "url": "/articles/a4dedf/",
    "permalink": "/articles/a4dedf/",
    "collection": "articles"
  },
  {
    "title": "Star ReadAstro 블로그 테마",
    "description": "Star Read Astro 블로그 테마의 설치 방법, 특징, 검색, 사용자 정의 구성, 댓글 설정 및 명령어 등에 대한 안내 문서입니다.",
    "cover": "https://t.alcy.cc/fj",
    "categories": [
      "主题说明"
    ],
    "tags": [],
    "date": "2025-10-01T00:00:00.000Z",
    "content": "<div align=\"center\">\n  <img src=\"https://origin.picgo.net/2025/09/20/starread9dd6dc8d9d8dc4eb.png\" alt=\"starread\" border=\"0\">\n   🏴󠁧󠁢󠁥󠁮󠁧󠁿 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/README.md\">English Document</a> | \n  🇨🇳 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMECN.md\">中文文档</a> | \n  🇯🇵 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEJA.md\">日本語ドキュメント</a> | \n  🇰🇷 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEKO.md\">한국어 문서</a> | \n  🇷🇺 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMERU.md\">Русская документация</a>\n</div>\n\n# Star Read - Astro 블로그 테마\n\n>별과 같은 빛나는 품질을 지닌 우아하면서도 간결한 Astro 테마입니다\n\n## 📦 설치\n\n### 방법 1: CLI 도구를 통해 초기화\n\n| 패키지 관리자   | 권장 명령어                                  |\n|----------------|-------------------------------------------|\n| pnpm / pnpx    | `pnpm dlx astro-theme-starread init` 또는 `pnpx astro-theme-starread init` |\n| npm (npx)      | `npx astro-theme-starread init`           |\n| Yarn           | `yarn dlx astro-theme-starread init` (Yarn v2+ 필요) |\n\n>[!note]\n>사용자가 지정한 폴더에 테마를 생성할 수 있도록 `create` 명령어를 제공합니다\n\n1. 프로젝트 생성: 사용 중인 패키지 관리자에 따라 다음 명령어 중 하나를 선택하세요：\n\n```bash\n# pnpm 사용\npnpm create astro-theme-starread my-blog\n\n# npm 사용\nnpx create-astro-theme-starread my-blog\n\n# yarn 사용\nyarn create astro-theme-starread my-blog\n\n# cnpm 사용\ncnpm init astro-theme-starread my-blog\n```\n\n2. 프로젝트 디렉토리로 이동：\n\n```bash\ncd my-blog\n```\n\n3. 의존성 설치：\n\n```bash\npnpm install\n```\n\n4. 개발 서버 시작：\n\n```bash\npnpm dev\n```\n\n### 방법 2: `astro` 템플릿 사용하여 설치\n\n>[!warning]\n>이 방법은 Github 저장소에 접근해야 하므로 네트워크 연결이 원활한지 확인하세요.\n\n| 패키지 관리자   | 명령어                                        |\n|----------------|---------------------------------------------|\n| pnpm           | `pnpm create astro@latest --template passwordgloo/astro-theme-starread` |\n| npm            | `npm create astro@latest -- --template passwordgloo/astro-theme-starread` |\n| yarn           | `yarn create astro --template passwordgloo/astro-theme-starread` |\n\n### 방법 3: 소스 코드에서 설치\n\n>[!warning]\n>该方式需访问Github仓库，确保网络畅通。\n\n\n```bash\ngit clone https://github.com/passwordgloo/astro-theme-starread\ncd astro-theme-starread\npnpm install\n```\n\n>[!note]\n>설치가 완료되면 개발 서버를 실행하세요：\n```bash\npnpm dev\n```\n\n## 📂 프로젝트 구조\n\n```text\n/\n├── src/\n│   ├── components/     # 컴포넌트 파일\n│   ├── content/        # 콘텐츠 설정\n│   ├── layouts/        # 레이아웃 템플릿\n│   ├── pages/          # 페이지 라우트\n│   └── styles/         # 스타일 파일\n├── public/             # 정적 자산\n└── dist/               # 빌드 출력\n```\n\n## 🚀 특징\n\n- 🎨 현대적인 UI 디자인\n- 🔍 로컬 검색(Pagefind) 및 Algolia 검색 지원\n- 📱 반응형 디자인\n- 🌙 다크/라이트 테마 전환\n- 🏷️ 태그 및 카테고리 지원\n- 📊 글 통계 및 작성자 정보 표시\n\n## 🔍 검색\n\n### 로컬 검색\n\n기본적으로 로컬 검색이 사용됩니다. 처음 사용 시 `pnpm local`을 실행하여 로컬 인덱스를 생성하세요\n\n### Algolia 검색\n\n>[!important]\n>프로덕션 환경에서는 코드에 민감한 정보가 노출되지 않도록 환경 변수를 통한 구성을 권장합니다.\n\n1. `starread.config.ts`를 편집하여 Algolia 검색을 선택하세요\n```ts\nexport const themeConfig: starreadthemeconfig = {\n  search: {\n    // 검색 서비스 제공자: 'local', 'algolia'\n      provider: 'algolia',\n    }\n}\n```\n\n2. 루트 디렉토리에 `.env` 파일을 생성하고 편집하세요\n\n>[!note]\n>Algolia 검색에는 Algolia 애플리케이션 ID, 검색 키, 인덱스 이름 및 관리자 API 키가 필요합니다.\n\n>[!tip]\n>Algolia 계정이 없는 경우 먼저 등록하고 애플리케이션을 생성해야 합니다.\n\n```txt\nPUBLIC_ALGOLIA_APP_ID=귀하의 Algolia 애플리케이션 ID\nPUBLIC_ALGOLIA_SEARCH_KEY=귀하의 Algolia 검색 키\nPUBLIC_ALGOLIA_INDEX_NAME=귀하의 인덱스 이름\nALGOLIA_WRITE_API_KEY=귀하의 쓰기 API 키 (인덱스 업로드용)\n```\n\n3. Algolia에 인덱스 푸시\n\n`pnpm algolia`를 실행하여 로컬 인덱스를 Algolia에 푸시하세요\n\n## ⚙️ 사용자 정의 구성\n\n루트 디렉토리의 `starread.config.ts` 파일을 수정하여 웹사이트 제목, 네비게이션 메뉴, 작성자 정보, 사이드바 구성 요소 표시 등 테마 구성을 사용자 정의할 수 있습니다.\n\n예제 구성 항목：\n```typescript\n// 웹사이트 제목 변경\nsite: {\n  title: '내 블로그',\n  // ...기타 구성\n}\n\n// 네비게이션 메뉴 사용자 정의\nnav: [\n  { name: '首页', href: '/' },\n  { name: '关于', href: '/about' },\n  // ...기타 메뉴 항목\n]\n```\n\n## 🔧 Twikoo 댓글 설정\n\nTwikoo 댓글 시스템을 활성화하려면 `src/components/Comment.astro` 파일의 13행에 있는 `envId` 값을 귀하의 [Twikoo 환경 주소](https://twikoo.js.org/backend.html)로 수정해 주세요.\n\n```js\n<script>\n  document.addEventListener('DOMContentLoaded', function() {\n    if (window.twikoo) {\n      window.twikoo.init({\n        envId: 'https://example.com',// 귀하의 환경 주소\n        el: '#tcomment',\n        path: window.location.pathname\n      });\n    } else {\n      console.error('Twikoo 로드에 실패했습니다. Twikoo의 로컬 위치 또는 CDN 주소를 확인해 주세요');\n    }\n  });\n</script>\n```\n\n## 🧞 명령어\n\n| 명령어                   | 설명                                           |\n| :----------------------- | :--------------------------------------------- |\n| `pnpm install`           | 의존성 설치                                   |\n| `pnpm dev`               | 로컬 개발 서버 `localhost:4321` 시작            |\n| `pnpm preview`           | 로컬에서 빌드 결과 미리보기                       |\n| `pnpm local`             | 자동 인덱스 스크립트 실행 및 프로덕션 사이트 빌드     |\n| `pnpm algolia`           | Algolia 검색에 데이터 푸시                       |\n| `pnpm changelog`         | 변경 로그 생성                                 |\n| `pnpm release`           | 버전 관리 (버전 번호 업데이트, 커밋 생성 등)        |",
    "slug": "articles/ko",
    "url": "/articles/7760d2/",
    "permalink": "/articles/7760d2/",
    "collection": "articles"
  },
  {
    "title": "Star Read Тема для блога Astro",
    "description": "Это русскоязычная документация для блог-темы Star Read для Astro.",
    "cover": "https://t.alcy.cc/lai",
    "categories": [
      "主题说明"
    ],
    "tags": [],
    "date": "2025-10-01T00:00:00.000Z",
    "content": "<div align=\"center\">\n  <img src=\"https://origin.picgo.net/2025/09/20/starread9dd6dc8d9d8dc4eb.png\" alt=\"starread\" border=\"0\">\n   🏴󠁧󠁢󠁥󠁮󠁧󠁿 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/README.md\">English Document</a> | \n  🇨🇳 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMECN.md\">中文文档</a> | \n  🇯🇵 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEJA.md\">日本語ドキュメント</a> | \n  🇰🇷 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMEKO.md\">한국어 문서</a> | \n  🇷🇺 <a href=\"https://github.com/passwordgloo/astro-theme-starread/blob/master/READMERU.md\">Русская документация</a>\n</div>\n\n# Star Read - Тема для блога Astro\n\n>Блестящая, но при этом простая и изысканная тема Astro со звездным качеством\n\n## 📦 Установка\n\n### Метод 1: Инициализация через CLI-инструмент\n\n| Менеджер пакетов | Рекомендуемая команда                          |\n|----------------|-------------------------------------------|\n| pnpm / pnpx    | `pnpm dlx astro-theme-starread init` или `pnpx astro-theme-starread init` |\n| npm (npx)      | `npx astro-theme-starread init`           |\n| Yarn           | `yarn dlx astro-theme-starread init` (требуется Yarn v2+) |\n\n>[!note]\n>Мы предоставляем команду `create` для удобного создания темы в указанной папке\n\n1. Создание проекта: в зависимости от используемого менеджера пакетов выберите одну из следующих команд：\n\n```bash\n# Использовать pnpm\npnpm create astro-theme-starread my-blog\n\n# Использовать npm\nnpx create-astro-theme-starread my-blog\n\n# Использовать yarn\nyarn create astro-theme-starread my-blog\n\n# Использовать cnpm\ncnpm init astro-theme-starread my-blog\n\n```\n\n2. Перейти в каталог проекта：\n\n```bash\n\ncd my-blog\n\n```\n\n3. Установить зависимости：\n\n```bash\npnpm install\n```\n\n4. Запустить сервер разработки：\n\n```bash\npnpm dev\n```\n\n### Метод 2: Установка с использованием шаблона `astro`\n\n>[!warning]\n>Этот метод требует доступа к репозиторию Github, убедитесь в стабильном интернет-соединении.\n\n| Менеджер пакетов | Команда                                        |\n|----------------|---------------------------------------------|\n| pnpm           | `pnpm create astro@latest --template passwordgloo/astro-theme-starread` |\n| npm            | `npm create astro@latest -- --template passwordgloo/astro-theme-starread` |\n| yarn           | `yarn create astro --template passwordgloo/astro-theme-starread` |\n\n### Метод 3: Установка из исходного кода\n\n>[!warning]\n>该方式需访问Github仓库，确保网络畅通。\n\n\n```bash\ngit clone https://github.com/passwordgloo/astro-theme-starread\ncd astro-theme-starread\npnpm install\n```\n\n>[!note]\n>После завершения установки запустите сервер разработки：\n```bash\npnpm dev\n```\n\n## 📂 Структура проекта\n\n```text\n/\n├── src/\n│   ├── components/     # Файлы компонентов\n│   ├── content/        # Конфигурация контента\n│   ├── layouts/        # Шаблоны макетов\n│   ├── pages/          # Маршруты страниц\n│   └── styles/         # Файлы стилей\n├── public/             # Статические ресурсы\n└── dist/               # Результат сборки\n```\n\n## 🚀 Характеристики\n\n- 🎨 Современный дизайн UI\n- 🔍 Поддержка локального поиска (Pagefind) и поиска Algolia\n- 📱 Адаптивный дизайн\n- 🌙 Переключение темной/светлой темы\n- 🏷️ Поддержка тегов и категорий\n- 📊 Отображение статистики статей и информации об авторе\n\n## 🔍 Поиск\n\n### Локальный поиск\n\nПо умолчанию используется локальный поиск, при первом использовании запустите `pnpm local` для создания локального индекса\n\n### Поиск Algolia\n\n>[!important]\n>В рабочей среде рекомендуется использовать настройку через переменные окружения, чтобы избежать раскрытия конфиденциальной информации в коде.\n\n1. Отредактируйте `starread.config.ts` и выберите поиск Algolia\n```ts\nexport const themeConfig: starreadthemeconfig = {\n  search: {\n    // Провайдер сервиса поиска: 'local', 'algolia'\n      provider: 'algolia',\n    }\n}\n```\n\n2. В корневом каталоге создайте и отредактируйте файл `.env`\n\n>[!note]\n>Для поиска Algolia требуется идентификатор приложения Algolia, ключ поиска, имя индекса и ключ API администратора.\n\n>[!tip]\n>Если у вас нет аккаунта Algolia, вам нужно сначала зарегистрироваться и создать приложение.\n\n```txt\nPUBLIC_ALGOLIA_APP_ID=Идентификатор вашего приложения Algolia\nPUBLIC_ALGOLIA_SEARCH_KEY=Ключ поиска Algolia\nPUBLIC_ALGOLIA_INDEX_NAME=Название вашего индекса\nALGOLIA_WRITE_API_KEY=Ключ API для записи (для загрузки индекса)\n```\n\n3. Отправить индекс в Algolia\n\nЗапустите `pnpm algolia` для отправки локального индекса в Algolia\n\n## ⚙️ Настройка\n\nВы можете настроить тему, изменив файл `starread.config.ts` в корневом каталоге, включая заголовок сайта, меню навигации, информацию об авторе, отображение компонентов боковой панели и т.д.\n\nПример конфигурации：\n```typescript\n// Изменить заголовок сайта\nsite: {\n  title: 'Мой блог',\n  // ...дополнительные настройки\n}\n\n// Настроить меню навигации\nnav: [\n  { name: '首页', href: '/' },\n  { name: '关于', href: '/about' },\n  // ...дополнительные пункты меню\n]\n```\n\n## 🔧 Настройка комментариев Twikoo\n\nЧтобы включить систему комментариев Twikoo, измените значение `envId` в строке 13 файла `src/components/Comment.astro` на адрес [вашей среды Twikoo](https://twikoo.js.org/backend.html).\n\n```js\n<script>\n  document.addEventListener('DOMContentLoaded', function() {\n    if (window.twikoo) {\n      window.twikoo.init({\n        envId: 'https://example.com',// Ваш адрес окружения\n        el: '#tcomment',\n        path: window.location.pathname\n      });\n    } else {\n      console.error('Не удалось загрузить Twikoo, проверьте местное расположение Twikoo или адрес CDN');\n    }\n  });\n</script>\n```\n\n## 🧞 Команды\n\n| Команда                 | Описание                                       |\n| :----------------------- | :--------------------------------------------- |\n| `pnpm install`           | Установить зависимости                         |\n| `pnpm dev`               | Запустить локальный сервер разработки `localhost:4321` |\n| `pnpm preview`           | Предварительный просмотр результата сборки локально |\n| `pnpm local`             | Запустить автоматический скрипт индексирования и собрать производственный сайт |\n| `pnpm algolia`           | Отправить данные в поиск Algolia                |\n| `pnpm changelog`         | Сгенерировать журнал изменений                  |\n| `pnpm release`           | Управление версиями (обновление номера версии, создание коммитов и т.д.) |",
    "slug": "articles/ru",
    "url": "/articles/2b75a9/",
    "permalink": "/articles/2b75a9/",
    "collection": "articles"
  },
  {
    "title": "创建Algolia应用",
    "description": "",
    "cover": "https://star.iglooblog.top/defaultCover.jpg",
    "categories": [
      "帮助"
    ],
    "tags": [],
    "date": "2025-05-20T00:00:00.000Z",
    "content": "# Algolia\n\n## 1.注册Algolia账号\n\n使用Github账号登录[Algolia 官网](https://www.algolia.com/)，如果你会魔法，请大胆用google账号\n\n![](/img/b00ffd826909d6963db185d09ae52102.png)\n\n![](/img/2256c4860b3d6be29e7044728d371b33.png)\n\n## 2.创建应用\n\n新版网页界面简化创建流程，点击`+ Create Application` 新建\n\n![](/img/62c8b8c88751e0b0421fdf086c601dba.png)\n\n![](/img/e7bc201a4979717d5a923ae770ad66d9.png)\n\n稍等片刻，自动创建完毕\n\n【可选】修改名称，不影响后续操作\n\n![](/img/7e4cfb390941057b8c8f2a0efc6c1df8.png)\n\n☑️ 要修改的项目，点击重命名\n\n## 3.查看必要信息\n\n### 方法1 点击首页Overview\n\n![](/img/837b5940f82495a1f5a561bf21210cb6.png)\n\n### 方法2 API Keys页面\n\n♦️点击设置进入`API Keys`\n\n![](/img/a60ed301cdd73cf73fc4982a3788cdbf.png)\n\n♦️复制紫色框内信息\n\n![](/img/53572c2df05e6520f767e46301990504.png)",
    "slug": "articles/search",
    "url": "/articles/31c3ea/",
    "permalink": "/articles/31c3ea/",
    "collection": "articles"
  },
  {
    "title": "Twikoo 评论系统",
    "description": "",
    "cover": "https://imgapi.xl0408.top/index.php",
    "categories": [
      "帮助"
    ],
    "tags": [],
    "date": "2025-07-20T00:00:00.000Z",
    "content": "## 云函数部署 \n\n将Twikoo托管或自行部署到指定站点\n\n| 部署方式                                                     | 推荐度 | 描述                                                         |\n| :----------------------------------------------------------- | :----- | :----------------------------------------------------------- |\n| [腾讯云一键部署](https://twikoo.js.org/backend.html#腾讯云一键部署) | ★☆☆☆☆  | 虽然方便，但是仅支持按量计费环境——也就是说，**一键部署的环境，当免费资源用尽后，将会产生费用**。且按量计费环境无法切换为包年包月环境。免费额度数据库读操作数只有 500 次 / 天，**无法支撑 Twikoo 的运行需求**。 |\n| [腾讯云手动部署](https://twikoo.js.org/backend.html#腾讯云手动部署) | ★★☆☆☆  | 手动部署到腾讯云云开发环境，在中国大陆访问速度较快。需要付费购买环境才能部署。 |\n| [腾讯云命令行部署](https://twikoo.js.org/backend.html#腾讯云命令行部署) | ★☆☆☆☆  | 仅针对有 Node.js 经验的开发者。                              |\n| [Vercel 部署](https://twikoo.js.org/backend.html#vercel-部署) | ★★★☆☆  | 适用于想要免费部署的用户，在中国大陆访问速度较慢甚至无法访问，绑定自己的域名可以提高访问速度。 |\n| [Railway 部署](https://twikoo.js.org/backend.html#railway-部署) | ★★☆☆☆  | 有免费额度但不足以支持一个月连续运行，部署简单，适合全球访问。 |\n| [Zeabur 部署](https://twikoo.js.org/backend.html#zeabur-部署) | ★☆☆☆☆  | 需要绑定支付宝或信用卡，部署简单，适合中国大陆访问，免费计划环境随时可能会被删除。 |\n| [Netlify 部署](https://twikoo.js.org/backend.html#netlify-部署) | ★★★★☆  | 有充足的免费额度，中国大陆访问速度不错。                     |\n| [Hugging Face 部署](https://twikoo.js.org/backend.html#hugging-face-部署) | ★★★★☆  | 免费，中国大陆访问速度不错。允许通过 Cloudflare Tunnels 自定义域名。 |\n| [AWS Lambda 部署](https://twikoo.js.org/backend.html#aws-lambda-部署) | ★★★☆☆  | 全球最大的云平台，适合已经使用 AWS 全家桶的用户。            |\n| [Cloudflare workers 部署](https://twikoo.js.org/backend.html#cloudflare-workers-部署) | ★★☆☆☆  | 部署需使用命令行，冷启动时间较短，功能有部分限制。           |\n| [私有部署](https://twikoo.js.org/backend.html#私有部署)      | ★★☆☆☆  | 适用于有服务器的用户，需要自行申请 HTTPS 证书。              |\n| [私有部署 (Docker)](https://twikoo.js.org/backend.html#私有部署-docker) | ★★★☆☆  | 适用于有服务器的用户，需要自行申请 HTTPS 证书。              |\n\n## 前端部署\n\n👆就是引入上面的云函数环境地址 \n\n### 在 Hexo 中使用 \n\n#### 在 [Hexo Butterfly](https://github.com/jerryc127/hexo-theme-butterfly) 主题使用 \n\n请参考 [Butterfly 安裝文檔(四) 主題配置-2](https://butterfly.js.org/posts/ceeb73f/#評論) 进行配置\n\n#### 在 [Hexo Keep](https://github.com/XPoet/hexo-theme-keep) 主题使用 \n\n请参考 [hexo-theme-keep/_config.yml](https://github.com/XPoet/hexo-theme-keep/blob/master/_config.yml) 进行配置\n\n#### 在 [Hexo Volantis](https://github.com/volantis-x/hexo-theme-volantis) 主题使用 \n\n请参考 [hexo-theme-volantis/_config.yml](https://github.com/volantis-x/hexo-theme-volantis/blob/master/_config.yml) 进行配置\n\n#### 在 [Hexo Ayer](https://github.com/Shen-Yu/hexo-theme-ayer) 主题使用 \n\n请参考 [hexo-theme-ayer/_config.yml](https://github.com/Shen-Yu/hexo-theme-ayer/blob/master/_config.yml) 进行配置\n\n#### 在 [Hexo NexT](https://github.com/next-theme/hexo-theme-next) 主题使用 \n\n**暂不支持 NexT 8 以下的版本**，请先升级到 NexT 8。然后在 Hexo 项目根目录执行\n\n```\n# For NexT version >= 8.0.0 && < 8.4.0\nnpm install hexo-next-twikoo@1.0.0\n# For NexT version >= 8.4.0\nnpm install hexo-next-twikoo@1.0.3\n```\n\n然后在配置中添加\n\n```\ntwikoo:\n  enable: true\n  visitor: true\n  envId: xxxxxxxxxxxxxxx # 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）\n  # region: ap-guangzhou # 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填\n```\n\n#### 在 [Hexo Matery](https://github.com/blinkfox/hexo-theme-matery) 主题使用 \n\n请参考 [hexo-theme-matery/_config.yml](https://github.com/blinkfox/hexo-theme-matery/blob/develop/_config.yml) 进行配置\n\n#### 在 [Hexo Icarus](https://github.com/ppoffice/hexo-theme-icarus) 主题使用 \n\n请参考 [基于腾讯云，给你的 Icarus 博客配上 Twikoo 评论系统](https://www.anzifan.com/post/icarus_to_candy_2/) by 异次元de机智君💯\n\n#### 在 [Hexo MengD(萌典)](https://github.com/lete114/hexo-theme-MengD) 主题使用 \n\n请参考 [hexo-theme-MengD/_config.yml](https://github.com/lete114/hexo-theme-MengD/blob/master/_config.yml) 进行配置\n\n#### 在 [hexo-theme-fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题使用 \n\n请参考 [配置指南-评论](https://hexo.fluid-dev.com/docs/guide/#评论) 进行配置\n\n#### 在 [hexo-theme-cards](https://github.com/ChrAlpha/hexo-theme-cards) 主题使用 \n\n请参考 [hexo-theme-cards/_config.yml](https://github.com/ChrAlpha/hexo-theme-cards/blob/master/_config.yml) 进行配置\n\n#### 在 [maupassant-hexo](https://github.com/tufu9441/maupassant-hexo) 主题使用 \n\n请参考 [maupassant-hexo/_config.yml](https://github.com/tufu9441/maupassant-hexo/blob/master/_config.yml) 进行配置\n\n#### 在 [hexo-theme-redefine](https://github.com/EvanNotFound/hexo-theme-redefine) 主题使用 \n\n请参考 [Redefine 官方文档 #comment](https://redefine-docs.ohevan.com/docs/configuration-guide/comment#twikoo) 进行配置\n\n#### 在 [Hexo-Theme-Solitude](https://github.com/valor-x/hexo-theme-solitude) 主题使用 \n\n请参考 [Solitude 文档](https://solitude-docs.efu.me/comments/twikoo) 进行配置\n\n### 在 Hugo 中使用 \n\n#### 在 [hugo-theme-stack](https://github.com/CaiJimmy/hugo-theme-stack) 主题使用 \n\n请参考 [Comments | Stack](https://stack.jimmycai.com/config/comments) 和 [hugo-theme-stack/config.yaml#L83](https://github.com/CaiJimmy/hugo-theme-stack/blob/master/config.yaml#L83) 进行配置\n\n#### 在 [FixIt](https://github.com/hugo-fixit/FixIt) 主题使用 \n\n请参考 [入门篇 - FixIt #主题配置](https://fixit.lruihao.cn/zh-cn/documentation/basics/#theme-configuration) 和 [hugo-fixit/FixIt/config.toml#L613-L624](https://github.com/hugo-fixit/FixIt/blob/8bb2a35dcc4c54fc3e0fb968df063d6be1daabf3/config.toml#L613-L624) 进行配置\n\n### 在 VitePress 中使用 \n\n请参考 [VitePress 集成 twikoo 参考解决方案](https://github.com/twikoojs/twikoo/issues/715) 进行配置。\n\n### 通过 CDN 引入 \n\n如果您使用的博客主题不支持 Twikoo，并且您不知道如何引入 Twikoo，您可以向博客主题开发者提交适配请求\n\n```\n<div id=\"tcomment\"></div>\n<script src=\"https://cdn.jsdelivr.net/npm/twikoo@1.6.44/dist/twikoo.min.js\"></script>\n<script>\ntwikoo.init({\n  envId: '您的环境id', // 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）\n  el: '#tcomment', // 容器元素\n  // region: 'ap-guangzhou', // 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填\n  // path: location.pathname, // 用于区分不同文章的自定义 js 路径，如果您的文章路径不是 location.pathname，需传此参数\n  // lang: 'zh-CN', // 用于手动设定评论区语言，支持的语言列表 https://github.com/twikoojs/twikoo/blob/main/src/client/utils/i18n/index.js\n})\n</script>\n```\n\n#### 不同版本之间的区别 \n\n- `twikoo.all.min.js`: 包含腾讯云云开发（tcb）的完整版本，如果您使用腾讯云云开发部署，请选择此版本\n- `twikoo.min.js`: 去除了腾讯云云开发（tcb）的精简版本，体积更小，适合所有非腾讯云云开发部署的用户\n- `twikoo.nocss.js`: 在完整版本的基础上剥离了样式，需要同时引入 `twikoo.css` 才能正常显示，适合想要魔改评论区样式的用户\n\n#### 更换 CDN 镜像 \n\n如果遇到默认 CDN 加载速度缓慢，可更换其他 CDN 镜像。以下为可供选择的公共 CDN，其中一些 CDN 可能需要数天时间同步最新版本：\n\n#### 推荐在中国使用 \n\n- `https://registry.npmmirror.com/twikoo/1.6.44/files/dist/twikoo.min.js`\n- `https://s4.zstatic.net/npm/twikoo@1.6.44/dist/twikoo.min.js`\n\n#### 推荐在全球使用 \n\n- `https://cdn.jsdelivr.net/npm/twikoo@1.6.44/dist/twikoo.min.js`\n\n#### 备用选项 \n\n- `https://s4.zstatic.net/ajax/libs/twikoo/1.6.41/twikoo.min.js`\n- `https://lib.baomitu.com/twikoo/1.6.39/twikoo.min.js`\n\n建议使用 CDN 引入 Twikoo 的用户在链接地址上锁定版本，以免将来 Twikoo 升级时受到非兼容性更新的影响。\n\n建议使用 CDN 引入 Twikoo 的用户在代码中加入 [SRI](https://developer.mozilla.org/zh-CN/docs/Web/Security/Subresource_Integrity) 以确保完整性，例：\n\n```\n<script\n  src=\"https://cdn.jsdelivr.net/npm/twikoo@1.6.36/dist/twikoo.all.min.js\"\n  integrity=\"sha384-4KfOjEinLSkv1i1J8TzlkC/RTnuiLoR1OLerVgjEKoH5djYtbf7mzEFsz9p3nfuA\"\n  crossorigin=\"anonymous\"></script>\n```\n\n其中 `integrity` 的值可以在 [SRI Hash Generator](https://www.srihash.org/) 查询。",
    "slug": "articles/twikoo",
    "url": "/articles/e6a07d/",
    "permalink": "/articles/e6a07d/",
    "collection": "articles"
  }
]