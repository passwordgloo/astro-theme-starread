---
import { themeConfig } from '../../content/config';

// 默认使用的搜索类型
const defaultSearchType = themeConfig.search?.default || 'local';

// 暴露给父组件的引用
const ref = Astro.props.ref || null;

// 计算基础路径
const bundlePath = `${import.meta.env.BASE_URL}pagefind/`;
---

<div class="search-container relative" ref={ref}>
  <button 
    id="search-toggle" 
    class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900"
    aria-label="搜索"
  >
    <span class="icon-[lucide--search] h-5 w-5 text-gray-700 dark:text-gray-300"></span>
  </button>
  
  <div 
    id="search-dropdown" 
    class="absolute right-0 mt-2 w-80 md:w-96 bg-white dark:bg-gray-900 shadow-lg rounded-md z-50 overflow-hidden transform origin-top-right scale-95 opacity-0 invisible transition-all duration-200"
  >
    <div class="relative">
      <div 
        id="pagefind-ui-container"
        class="pagefind-ui-container"
        data-bundle-path={bundlePath}
      ></div>
      <button 
        id="search-close" 
        class="absolute right-3 top-3 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
        aria-label="关闭搜索"
      >
        <span class="icon-[lucide--x] h-5 w-5 text-gray-400"></span>
      </button>
    </div>
  </div>
</div>

<style>
  /* Pagefind UI 自定义样式 - 简洁版本 */
  :global(.pagefind-ui) {
    --pagefind-ui-scale: 1;
    --pagefind-ui-primary: #3b82f6;
    --pagefind-ui-text: #374151;
    --pagefind-ui-background: transparent;
    --pagefind-ui-border: #e5e7eb;
    --pagefind-ui-tag: #f3f4f6;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-border-radius: 0.375rem;
    --pagefind-ui-image-border-radius: 0.25rem;
    --pagefind-ui-image-box-ratio: 3 / 2;
    --pagefind-ui-font: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  }

  :global(.dark .pagefind-ui) {
    --pagefind-ui-primary: #60a5fa;
    --pagefind-ui-text: #d1d5db;
    --pagefind-ui-background: transparent;
    --pagefind-ui-border: #374151;
    --pagefind-ui-tag: #1f2937;
  }

  :global(.pagefind-ui__form) {
    position: relative;
    border-bottom: 1px solid var(--pagefind-ui-border);
  }

  :global(.pagefind-ui__search-input) {
    padding-left: 2.5rem !important;
    padding-right: 2.5rem !important;
    padding-top: 0.75rem !important;
    padding-bottom: 0.75rem !important;
    font-size: 0.875rem !important;
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
    color: var(--pagefind-ui-text) !important;
    outline: none !important;
  }

  :global(.pagefind-ui__search-input:focus) {
    outline: none !important;
    box-shadow: none !important;
    border: none !important;
  }

  :global(.pagefind-ui__form::before) {
    left: 0.75rem !important;
    color: #9ca3af !important;
  }

  :global(.dark .pagefind-ui__form::before) {
    color: #6b7280 !important;
  }

  :global(.pagefind-ui__results) {
    max-height: 384px;
    overflow-y: auto;
  }

  :global(.pagefind-ui__result) {
    padding: 0.75rem;
    border-bottom: 1px solid var(--pagefind-ui-border);
  }

  :global(.pagefind-ui__result:last-child) {
    border-bottom: none;
  }

  :global(.pagefind-ui__message) {
    padding: 1rem;
    text-align: center;
    color: #6b7280;
    font-size: 0.875rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const searchToggle = document.getElementById('search-toggle');
    const searchContainer = document.getElementById('pagefind-search-container');
    
    if (searchToggle && searchContainer) {
      // 切换搜索框显示/隐藏
      searchToggle.addEventListener('click', (e) => {
        e.stopPropagation();
        if (searchContainer.classList.contains('invisible')) {
          // 显示搜索框
          searchContainer.classList.remove('invisible', 'opacity-0', 'scale-95');
          searchContainer.classList.add('opacity-100', 'scale-100');
          // 聚焦到搜索输入框
          const searchInput = searchContainer.querySelector('.pagefind-ui__search-input');
          if (searchInput) {
            searchInput.focus();
          }
        } else {
          // 隐藏搜索框
          searchContainer.classList.add('invisible', 'opacity-0', 'scale-95');
          searchContainer.classList.remove('opacity-100', 'scale-100');
        }
      });
      
      // 点击页面其他地方关闭搜索框
      document.addEventListener('click', (e) => {
        if (!searchToggle.contains(e.target) && !searchContainer.contains(e.target)) {
          searchContainer.classList.add('invisible', 'opacity-0', 'scale-95');
          searchContainer.classList.remove('opacity-100', 'scale-100');
        }
      });
      
      // ESC键关闭搜索框
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !searchContainer.classList.contains('invisible')) {
          searchContainer.classList.add('invisible', 'opacity-0', 'scale-95');
          searchContainer.classList.remove('opacity-100', 'scale-100');
        }
      });
    }

    // 导航栏滚动逻辑
    let lastScrollY = window.scrollY;
    let ticking = false;

    function handleScroll() {
      const navbar = document.getElementById('navbar');
      if (!navbar) return;

      const currentScrollY = window.scrollY;
      
      // 向下滚动时显示标题
      if (currentScrollY > lastScrollY && currentScrollY > 100) {
        navbar.classList.add('show-title');
        navbar.classList.remove('hide-nav');
      } 
      // 向上滚动时显示完整导航栏
      else if (currentScrollY < lastScrollY) {
        navbar.classList.remove('show-title');
        navbar.classList.remove('hide-nav');
      }
      
      // 滚动到顶部时重置
      if (currentScrollY <= 10) {
        navbar.classList.remove('show-title');
        navbar.classList.remove('hide-nav');
      }

      lastScrollY = currentScrollY;
      ticking = false;
    }

    window.addEventListener('scroll', () => {
      if (!ticking) {
        window.requestAnimationFrame(handleScroll);
        ticking = true;
      }
    });
  });

  document.addEventListener('DOMContentLoaded', () => {
    const searchToggle = document.getElementById('search-toggle');
    const searchDropdown = document.getElementById('search-dropdown');
    const searchClose = document.getElementById('search-close');
    const pagefindContainer = document.getElementById('pagefind-ui-container');
    
    let pagefindUI = null;

    // 初始化 Pagefind UI
    async function initPagefindUI() {
      if (pagefindUI) return;

      try {
        // 动态加载 Pagefind UI
        const script = document.createElement('script');
        script.src = '/pagefind/pagefind-ui.js';
        script.type = 'module';
        
        await new Promise((resolve, reject) => {
          script.onload = resolve;
          script.onerror = reject;
          document.head.appendChild(script);
        });

        // 等待 PagefindUI 可用
        const checkPagefindUI = () => {
          if (window.PagefindUI) {
            const bundlePath = pagefindContainer.getAttribute('data-bundle-path');
            
            pagefindUI = new window.PagefindUI({
              element: "#pagefind-ui-container",
              bundlePath: bundlePath,
              showSubResults: true,
              excerptLength: 30,
              showImages: false,
              showEmptyFilters: false,
              debounceTimeoutMs: 300
            });

            // 隐藏关闭按钮，因为 Pagefind UI 有自己的
            searchClose.style.display = 'none';
          } else {
            setTimeout(checkPagefindUI, 100);
          }
        };
        
        checkPagefindUI();
      } catch (error) {
        console.error('加载 Pagefind UI 失败:', error);
      }
    }

    // 切换搜索框显示/隐藏
    searchToggle.addEventListener('click', async (e) => {
      e.stopPropagation();
      
      if (searchDropdown.classList.contains('invisible')) {
        searchDropdown.classList.remove('invisible', 'opacity-0', 'scale-95');
        searchDropdown.classList.add('opacity-100', 'scale-100');
        
        // 初始化 Pagefind UI
        await initPagefindUI();
        
        // 聚焦搜索输入框
        setTimeout(() => {
          const input = searchDropdown.querySelector('.pagefind-ui__search-input');
          if (input) input.focus();
        }, 100);
      } else {
        searchDropdown.classList.add('invisible', 'opacity-0', 'scale-95');
        searchDropdown.classList.remove('opacity-100', 'scale-100');
        
        // 清空搜索
        if (pagefindUI && pagefindUI.triggerSearch) {
          pagefindUI.triggerSearch('');
        }
      }
    });

    // 关闭搜索框
    searchClose.addEventListener('click', () => {
      searchDropdown.classList.add('invisible', 'opacity-0', 'scale-95');
      searchDropdown.classList.remove('opacity-100', 'scale-100');
      
      if (pagefindUI && pagefindUI.triggerSearch) {
        pagefindUI.triggerSearch('');
      }
    });

    // 点击页面其他地方关闭搜索框
    document.addEventListener('click', (e) => {
      const searchContainer = document.querySelector('.search-container');
      if (searchContainer && !searchContainer.contains(e.target)) {
        searchDropdown.classList.add('invisible', 'opacity-0', 'scale-95');
        searchDropdown.classList.remove('opacity-100', 'scale-100');
        
        if (pagefindUI && pagefindUI.triggerSearch) {
          pagefindUI.triggerSearch('');
        }
      }
    });

    // ESC键关闭搜索框
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !searchDropdown.classList.contains('invisible')) {
        searchClose.click();
      }
    });

    // 监听 Astro 页面加载事件
    document.addEventListener('astro:page-load', () => {
      if (pagefindUI) {
        pagefindUI = null;
      }
    });
  });
</script>