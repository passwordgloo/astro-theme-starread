<div id="article-toc-container" class="bg-white/70 backdrop-blur-xl border border-white/20 shadow-[0_1px_0_0_rgba(255,255,255,0.6)_inset,0_8px_30px_rgba(0,0,0,0.06)] dark:bg-cyan-950/30 dark:backdrop-blur-xl dark:border-white/10 dark:shadow-[0_1px_0_0_rgba(255,255,255,0.08)_inset,0_8px_30px_rgba(0,0,0,0.35)] rounded-lg shadow-sm p-4 transition-all duration-300">
  <div class="flex items-center space-x-2 mb-4 pb-3 border-b border-gray-100 dark:border-slate-700/50">
    <span class="icon-[lucide--list] w-5 h-5 transition-colors duration-300"></span>
    <h3 class="font-bold text-lg m-0 text-gray-800 dark:text-gray-100 transition-colors duration-300">文章目录</h3>
  </div>
  <nav id="table-of-contents" class="text-sm space-y-1">
    <!-- 目录将通过JavaScript动态生成 -->
  </nav>
</div>

<script>
// 生成文章目录
document.addEventListener('DOMContentLoaded', () => {
    const content = document.getElementById('article-content');
    const toc = document.getElementById('table-of-contents');
    const tocContainer = document.getElementById('article-toc-container');
    const headings = content.querySelectorAll('h2, h3, h4');

    // 初始化粘性固定功能
    function initStickyTOC() {
        // 检查文章内容高度是否超过浏览器高度
        const isContentTallEnough = content.offsetHeight > window.innerHeight;
        
        // 如果文章内容不够长，直接返回
        if (!isContentTallEnough) {
            tocContainer.classList.remove('sticky-toc');
            return;
        }
        
        // 添加滚动事件监听器以实现粘性固定
        const handleScroll = () => {
            const scrollPosition = window.scrollY;
            const headerOffset = 100; // 顶部偏移量
            const containerPosition = content.getBoundingClientRect().top + window.scrollY - headerOffset;
            const containerBottom = containerPosition + content.offsetHeight;
            
            // 当滚动到文章区域且未滚动到底部时，固定目录
            if (scrollPosition >= containerPosition && scrollPosition < containerBottom - window.innerHeight + 50) {
                tocContainer.classList.add('sticky-toc');
            } else {
                tocContainer.classList.remove('sticky-toc');
            }
        };
        
        // 初始检查
        handleScroll();
        
        // 添加滚动事件监听
        window.addEventListener('scroll', handleScroll);
        
        // 添加窗口大小变化事件监听
        window.addEventListener('resize', () => {
            if (content.offsetHeight <= window.innerHeight) {
                tocContainer.classList.remove('sticky-toc');
            } else {
                handleScroll();
            }
        });
    }

    if (headings.length === 0) {
        toc.innerHTML = '<div class="text-center py-8"><div class="inline-flex items-center justify-center w-12 h-12 rounded-full bg-gray-100 dark:bg-slate-800 mb-3"><span class="icon-[lucide--file-text] w-6 h-6 text-gray-400 dark:text-slate-500"></span></div><p class="text-gray-500 dark:text-slate-400 italic">暂无目录</p></div>';
        return;
    }

    let tocHTML = '';
    headings.forEach((heading, index) => {
        const id = heading.id || heading.textContent.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '');
        heading.id = id;
        const level = heading.tagName.toLowerCase();

        // 根据标题级别设置不同样式
        let levelStyles = '';
        let hoverStyles = '';
        let activeStyles = '';
        let indentStyle = '';

        if (level === 'h2') {
            levelStyles = 'font-semibold text-gray-700 dark:text-gray-200';
            hoverStyles = 'hover:text-blue-600 dark:hover:text-blue-400';
            activeStyles = 'text-white bg-blue-600 dark:bg-blue-500 shadow-sm';
            indentStyle = 'pl-3';
        } else if (level === 'h3') {
            levelStyles = 'font-medium text-gray-600 dark:text-gray-300';
            hoverStyles = 'hover:text-blue-500 dark:hover:text-blue-300';
            activeStyles = 'text-white bg-blue-500 dark:bg-blue-400 shadow-sm';
            indentStyle = 'pl-6';
        } else if (level === 'h4') {
            levelStyles = 'text-sm text-gray-500 dark:text-gray-400';
            hoverStyles = 'hover:text-blue-400 dark:hover:text-blue-300';
            activeStyles = 'text-white bg-blue-400 dark:bg-blue-300 shadow-sm';
            indentStyle = 'pl-9';
        }

        const itemClasses = `group flex items-center py-2.5 px-4 rounded-lg transition-all duration-200 ${indentStyle} ${levelStyles} ${hoverStyles}`;

        tocHTML += `
            <div class="relative">
                <a href="#${id}" class="${itemClasses}" data-level="${level}" data-index="${index}">
                    <span class="line-clamp-2">${heading.textContent}</span>
                </a>
            </div>
        `;
    });

    toc.innerHTML = tocHTML;

    // 平滑滚动和交互效果
    document.querySelectorAll('#table-of-contents a').forEach((anchor) => {
        anchor.addEventListener('click', (e) => {
            e.preventDefault();
            const targetId = anchor.getAttribute('href');
            const targetElement = document.querySelector(targetId);

            if (targetElement) {
                // 添加点击动画效果
                anchor.style.transform = 'scale(0.98)';
                setTimeout(() => {
                    anchor.style.transform = 'scale(1)';
                }, 150);

                window.scrollTo({
                    top: targetElement.offsetTop - 100,
                    behavior: 'smooth'
                });
            }
        });
    });

    // 滚动时高亮当前章节
    function updateActiveSection() {
        let currentSectionIndex = -1;
        const scrollPosition = window.scrollY + 120;

        headings.forEach((heading, index) => {
            const sectionTop = heading.offsetTop;
            const sectionBottom = sectionTop + heading.offsetHeight;
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionBottom) {
                currentSectionIndex = index;
            }
        });

        // 如果滚动到底部，选择最后一个章节
        if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight - 100) {
            currentSectionIndex = headings.length - 1;
        }

        document.querySelectorAll('#table-of-contents a').forEach((link, index) => {
            const isActive = index === currentSectionIndex;
            const level = link.getAttribute('data-level');
            
            let activeClasses = '';
            if (level === 'h2') {
                activeClasses = 'text-white bg-blue-600 dark:bg-blue-500 shadow-sm';
            } else if (level === 'h3') {
                activeClasses = 'text-white bg-blue-500 dark:bg-blue-400 shadow-sm';
            } else {
                activeClasses = 'text-white bg-blue-400 dark:bg-blue-300 shadow-sm';
            }

            if (isActive) {
                link.classList.add(...activeClasses.split(' '));
                link.classList.add('font-semibold');
                
                // 确保活跃项可见
                const tocContainer = link.closest('#table-of-contents');
                const linkRect = link.getBoundingClientRect();
                const containerRect = tocContainer.getBoundingClientRect();
                
                if (linkRect.top < containerRect.top || linkRect.bottom > containerRect.bottom) {
                    link.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                }
            } else {
                link.classList.remove(...activeClasses.split(' '));
                link.classList.remove('font-semibold');
            }
        });
    }

    // 防抖滚动处理
    let scrollTimeout;
    window.addEventListener('scroll', () => {
        clearTimeout(scrollTimeout);
        scrollTimeout = setTimeout(updateActiveSection, 50);
    });

    // 初始高亮
    updateActiveSection();
    
    // 初始化粘性固定功能
    initStickyTOC();

    // 添加滚动条样式
    if (toc) {
        toc.classList.add('scroll-smooth');
    }
});
</script>

<style>
/* 自定义滚动条样式 */
#table-of-contents::-webkit-scrollbar {
    width: 4px;
}

#table-of-contents::-webkit-scrollbar-track {
    background: transparent;
}

#table-of-contents::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 2px;
}

#table-of-contents::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
}

.dark #table-of-contents::-webkit-scrollbar-thumb {
    background: #475569;
}

.dark #table-of-contents::-webkit-scrollbar-thumb:hover {
    background: #64748b;
}

/* 动画效果 */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 粘性目录样式 */
.sticky-toc {
    position: sticky;
    top: 6rem;
    z-index: 40;
    max-height: calc(100vh - 8rem);
    overflow-y: auto;
    animation: fadeInUp 0.3s ease-out;
}

#table-of-contents > div {
    animation: fadeInUp 0.3s ease-out;
}

#table-of-contents > div:nth-child(n) {
    animation-delay: calc(var(--index) * 0.05s);
}
</style>