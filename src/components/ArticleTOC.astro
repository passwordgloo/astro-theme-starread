<div class="bg-white/70 backdrop-blur-xl border border-white/20 shadow-[0_1px_0_0_rgba(255,255,255,0.6)_inset,0_8px_30px_rgba(0,0,0,0.06)] dark:bg-cyan-950/30 dark:backdrop-blur-xl dark:border-white/10 dark:shadow-[0_1px_0_0_rgba(255,255,255,0.08)_inset,0_8px_30px_rgba(0,0,0,0.35)] rounded-lg shadow-sm p-6 sticky top-6">
    <h3 class="font-bold text-lg mb-4 pb-2 border-b border-gray-200 dark:border-white/10">文章目录</h3>
    <nav id="table-of-contents" class="text-sm space-y-1.5">
        <!-- 目录将通过JavaScript动态生成 -->
    </nav>
</div>

<script>
// 生成文章目录
document.addEventListener('DOMContentLoaded', () => {
    const content = document.getElementById('article-content');
    const toc = document.getElementById('table-of-contents');
    const headings = content.querySelectorAll('h2, h3, h4');

    if (headings.length === 0) {
    toc.innerHTML = '<p class="text-gray-500 italic">本文没有目录</p>';
    return;
    }

    let tocHTML = '';
    headings.forEach((heading) => {
    const id = heading.id || heading.textContent.toLowerCase().replace(/\s+/g, '-');
    heading.id = id;
    const level = heading.tagName.toLowerCase();
    const indent = level === 'h3' ? ' border-gray-100' : '';

    // 根据标题级别设置不同样式
    let levelStyles = '';
    if (level === 'h2') {
      levelStyles = 'font-bold text-gray-800 dark:text-gray-100';
    } else if (level === 'h3') {
      levelStyles = 'text-gray-700 dark:text-gray-200';
    } else if (level === 'h4') {
      levelStyles = 'text-gray-600 dark:text-gray-300 italic';
    }

    // 设置不同级别的缩进
    let indentStyle = '';
    if (level === 'h3') {
      indentStyle = 'pl-4 border-l-2 border-gray-200 dark:border-gray-700';
    } else if (level === 'h4') {
      indentStyle = 'pl-8 border-l-2 border-gray-200 dark:border-gray-700';
    }

    tocHTML += `
        <a href="#${id}" class="block py-1.5 ${indentStyle} ${levelStyles} hover:text-blue-600 transition-all" data-level="${level}">
        ${heading.textContent}
        </a>
    `;
    });

    toc.innerHTML = tocHTML;

    // 平滑滚动
    document.querySelectorAll('#table-of-contents a').forEach((anchor) => {
    anchor.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = anchor.getAttribute('href');
        const targetElement = document.querySelector(targetId);

        if (targetElement) {
        window.scrollTo({
            top: targetElement.offsetTop - 80,
            behavior: 'smooth'
        });
        }
    });
    });

    // 滚动时高亮当前章节
    window.addEventListener('scroll', () => {
    let currentSectionId = '';
    headings.forEach((heading) => {
        const sectionTop = heading.offsetTop;
        if (window.scrollY >= sectionTop - 100) {
        currentSectionId = '#' + heading.id;
        }
    });

    document.querySelectorAll('#table-of-contents a').forEach((link) => {
        if (link.getAttribute('href') === currentSectionId) {
        link.classList.add('text-blue-600', 'font-medium');
        } else {
        link.classList.remove('text-blue-600', 'font-medium');
        }
    });
    });

    // 导航栏滚动效果
    let lastScrollTop = 0;
    const header = document.querySelector('header');
    if (header) {
    window.addEventListener('scroll', () => {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

        if (scrollTop > lastScrollTop && scrollTop > 100) {
        // 向下滚动，显示文章标题
        header.classList.add('show-title');
        header.classList.remove('show-nav');
        } else {
        // 向上滚动，显示导航
        header.classList.remove('show-title');
        header.classList.add('show-nav');
        }

        lastScrollTop = scrollTop;
    });
    }
});
</script>