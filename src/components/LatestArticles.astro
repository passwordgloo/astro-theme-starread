---
interface Props {
  articles: Array<{
    title: string;
    author: string;
    date: string;
    category?: string;
  }>;
}

const { articles } = Astro.props;
---

<div class="bg-white rounded-lg shadow-md p-6 mb-6">
  <h2 class="text-xl font-bold mb-4 text-gray-800 flex items-center">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
    </svg>
    最新文章
  </h2>
  <div class="space-y-4">
    {articles.map((article, index) => (
      <div key={index} class="flex items-start p-3 hover:bg-gray-50 rounded-lg transition-colors duration-200">
        <div class="flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center font-bold mr-3">
          {index + 1}
        </div>
        <div class="flex-1 min-w-0">
          <h3 class="text-sm font-medium text-gray-900 truncate hover:text-blue-600 transition-colors duration-200">
            {article.title}
          </h3>
          <div class="flex items-center mt-1 text-xs text-gray-500">
            <span>{article.author}</span>
            <span class="mx-1.5">•</span>
            <span>{article.date}</span>
            {article.category && (
              <>
                <span class="mx-1.5">•</span>
                <span class="text-blue-500 bg-blue-50 px-1.5 py-0.5 rounded">{article.category}</span>
              </>
            )}
          </div>
        </div>
      </div>
    ))}
  </div>
</div>