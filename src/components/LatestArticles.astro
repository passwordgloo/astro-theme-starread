---
import type { CollectionEntry } from 'astro:content';

interface Props {
  articles: CollectionEntry<'articles'>[];
}

const { articles } = Astro.props;
---

<div class="bg-white rounded-lg shadow-md p-6 mb-6">
  <h2 class="text-xl font-bold mb-4 text-gray-800 flex items-center">
    <span class="icon-[lucide--file-text] h-5 w-5 mr-2"></span>
    最新文章
  </h2>
  <div class="space-y-4">
    {articles.length > 0 ? (
      articles.map((article, index) => (
        <div key={article.slug} class="flex items-start p-4 hover:bg-gray-50 rounded-lg transition-all duration-300 border-l-2 border-transparent hover:border-blue-500">
          <div class="flex-shrink-0 w-7 h-7 bg-blue-600 text-white rounded-md flex items-center justify-center font-bold mr-4 shadow-sm">
            {index + 1}
          </div>
          <div class="flex-1 min-w-0">
            <a href={`/articles/${article.slug}`} class="text-base font-medium text-gray-800 hover:text-blue-600 transition-colors duration-200 line-clamp-1">
              {article.data.title}
            </a>
            <div class="flex flex-wrap items-center mt-2 text-xs text-gray-500 gap-2">
              <span>{article.data.author || 'applek'}</span>
              <span class="text-gray-300">•</span>
              <span>{typeof article.data.date === 'string' ? article.data.date.split(' ')[0] : article.data.date?.toISOString().split('T')[0]}</span>
              {article.data.categories?.[0] && (
                <span class="text-blue-500 bg-blue-50 px-2 py-0.5 rounded-full text-xs font-medium">{article.data.categories[0]}</span>
              )}
            </div>
          </div>
        </div>
      ))
    ) : (
      <div class="text-center py-8 text-gray-500">
        暂无文章数据
      </div>
    )}
  </div>
</div>